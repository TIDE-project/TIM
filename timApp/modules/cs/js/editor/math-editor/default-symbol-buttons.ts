/**
 * List of latex symbol buttons for formulaeditor
 */

import type {ITemplateButton} from "../../csPlugin";

export const DEFAULT_SYMBOL_BUTTONS: ITemplateButton[] = [
    {
        text: "\\[ \\pi \\]",
        data: "\\pi",
        expl: "\\pi",
        type: "q",
    },
    {
        text: "\\[ \\sin \\]",
        data: "\\sin",
        expl: "\\sin",
        type: "q",
    },
    {
        text: "\\[ \\cos \\]",
        data: "\\cos",
        expl: "\\cos",
        type: "q",
    },
    {
        text: "\\[ \\tan \\]",
        data: "\\tan",
        expl: "\\tan",
        type: "q",
    },
    {
        text: "\\[ \\overline{\\text{i}} \\]",
        data: "\\overline{\\text{i}}",
        expl: "\\overline{\\text{i}}",
        type: "s",
    },
    {
        text: "\\[ \\overline{\\text{j}} \\]",
        data: "\\overline{\\text{j}}",
        expl: "\\overline{\\text{j}}",
        type: "s",
    },
    {
        text: "\\[ \\overline{\\text{k}} \\]",
        data: "\\overline{\\text{k}}",
        expl: "\\overline{\\text{k}}",
        type: "s",
    },
    {
        text: "\\[ \\frac{\\square}{\\square} \\]",
        data: "\\frac{⁞}{}",
        expl: "\\frac{}{}",
        type: "s",
    },
    {
        text: "\\[ f(\\square) \\]",
        data: "f(⁞)",
        expl: "f()",
        type: "s",
    },
    {
        text: "\\[ \\sqrt{\\square} \\]",
        data: "\\sqrt{⁞}",
        expl: "\\sqrt{}",
        type: "s",
    },
    {
        text: "\\[ \\square^n \\]",
        data: "⁞^n",
        expl: "^n",
        type: "s",
    },
    {
        text: "\\[ \\lim_{\\square} \\]",
        data: "\\lim_{⁞}",
        expl: "\\lim_{}",
        type: "s",
    },
    {
        text: "\\[ \\sum_{\\square}^{\\square} \\]",
        data: "\\sum_{⁞}^{}",
        expl: "\\sum_{}^{}",
        type: "s",
    },
    {
        text: "\\[ \\int_\\square^\\square \\]",
        data: "\\int_{⁞}^{}",
        expl: "\\int_{}^{}",
        type: "s",
    },
    {
        text: "\\[ \\bigg/_{\\!\\!\\!\\!\\!{ \\square }}^{ \\square } \\]",
        data: "\\bigg/_{\\!\\!\\!\\!\\!{}}^{}",
        expl: "\\bigg/_{\\!\\!\\!\\!\\!{}}^{}",
        type: "s",
    },
    {
        text: "\\[ \\overrightarrow{\\square} \\]",
        data: "\\overrightarrow{⁞}",
        expl: "\\overrightarrow{ }",
        type: "s",
    },
    {
        text: "\\[ \\overleftarrow{\\square} \\]",
        data: "\\overleftarrow{⁞}",
        expl: "\\overleftarrow{ }",
        type: "s",
    },
    {
        text: "\\[ \\binom{\\square}{\\square} \\]",
        data: "\\binom{⁞}{}",
        expl: "\\binom{}{}",
        type: "s",
    },
    {
        text: "\\[ \\begin{cases}\\square&\\square\\\\\\square&\\square\\end{cases} \\]",
        data: "\\begin{cases}⁞&\\\\&\\end{cases}",
        expl: "\\begin{cases} &\\\\&\\end{cases}",
        type: "s",
    },
    {
        text: "\\[ \\begin{matrix}\\square&\\square\\\\\\square&\\square\\end{matrix} \\]",
        data: "\\begin{matrix}⁞&\\\\&\\end{matrix}",
        expl: "\\begin{matrix} &\\\\&\\end{matrix}",
        type: "s",
    },
    {
        text: "\\[ \\begin{array}{l|l}\\square&\\square\\\\\\hline\\square&\\square\\end{array} \\]",
        data: "\\begin{array}{l|l}⁞&\\\\\\hline&\\end{array}",
        expl: "\\begin{array}{l|l}&\\\\\\hline&\\end{array}",
        type: "s",
    },
];

/**
 * Large list of symbols that can be added to formulaeditor
 */
export const LATEX_BUTTONS: ITemplateButton[] = [
    {text: "$", data: "$$", expl: "$ $", type: "t"},
    {text: "$$", data: "$$⁞$$", expl: "$$ $$", type: "t"},
    {
        text: "\\( ° \\)",
        data: "°",
        expl: "°",
        type: "q",
    },
    {
        text: "\\( \\cdot \\)",
        data: "\\cdot",
        expl: "\\cdot",
        type: "q",
    },
    {
        text: "\\( \\times \\)",
        data: "\\times",
        expl: "\\times",
        type: "q",
    },
    {
        text: "\\( \\pm \\)",
        data: "\\pm",
        expl: "\\pm",
        type: "q",
    },
    {
        text: "\\( \\infty \\)",
        data: "\\infty",
        expl: "\\infty",
        type: "q",
    },
    {
        text: "\\( ^2 \\)",
        data: "^2",
        expl: "^2",
        type: "q",
    },
    {
        text: "\\( ^3 \\)",
        data: "^3",
        expl: "^3",
        type: "q",
    },
    {
        text: "\\( \\frac{1}{2} \\)",
        data: "\\frac{1}{2}",
        expl: "\\frac{1}{2}",
        type: "q",
    },
    {
        text: "\\( \\frac{1}{3} \\)",
        data: "\\frac{1}{3}",
        expl: "\\frac{1}{3}",
        type: "q",
    },
    {
        text: "\\( \\pi \\)",
        data: "\\pi",
        expl: "\\pi",
        type: "q",
    },
    {
        text: "‰",
        data: "‰",
        expl: "‰",
        type: "q",
    },
    {
        text: "\\( \\alpha \\)",
        data: "\\alpha",
        expl: "\\alpha",
        type: "q",
    },
    {
        text: "\\( \\beta \\)",
        data: "\\beta",
        expl: "\\beta",
        type: "q",
    },
    {
        text: "\\( \\ne \\)",
        data: "\\ne",
        expl: "\\ne",
        type: "q",
    },
    {
        text: "\\( \\approx \\)",
        data: "\\approx",
        expl: "\\approx",
        type: "q",
    },
    {
        text: "\\( \\le \\)",
        data: "\\le",
        expl: "\\le",
        type: "q",
    },
    {
        text: "\\( \\sphericalangle \\)",
        data: "\\sphericalangle",
        expl: "\\sphericalangle",
        type: "q",
    },
    {
        text: "\\( \\mid \\)",
        data: "\\mid",
        expl: "\\mid",
        type: "q",
    },
    {
        text: "\\( \\parallel \\)",
        data: "\\parallel",
        expl: "\\parallel",
        type: "q",
    },
    {
        text: "\\( \\rightarrow \\)",
        data: "\\rightarrow",
        expl: "\\rightarrow",
        type: "q",
    },
    {
        text: "\\( \\Rightarrow \\)",
        data: "\\Rightarrow",
        expl: "\\Rightarrow",
        type: "q",
    },
    {
        text: "\\( \\Leftrightarrow \\)",
        data: "\\Leftrightarrow",
        expl: "\\Leftrightarrow",
        type: "q",
    },
    {
        text: "\\( \\in \\)",
        data: "\\in",
        expl: "\\in",
        type: "q",
    },
    {
        text: "\\( \\mathbb{Z} \\)",
        data: "\\mathbb{Z}",
        expl: "\\mathbb{Z}",
        type: "q",
    },
    {
        text: "\\( \\mathbb{R} \\)",
        data: "\\mathbb{R}",
        expl: "\\mathbb{R}",
        type: "q",
    },
    {
        text: "\\( \\Gamma \\)",
        data: "\\Gamma",
        expl: "\\Gamma",
        type: "s",
    },
    {
        text: "\\( \\gamma \\)",
        data: "\\gamma",
        expl: "\\gamma",
        type: "s",
    },
    {
        text: "\\( \\Delta \\)",
        data: "\\Delta",
        expl: "\\Delta",
        type: "s",
    },
    {
        text: "\\( \\delta \\)",
        data: "\\delta",
        expl: "\\delta",
        type: "s",
    },
    {
        text: "\\( \\varepsilon \\)",
        data: "\\varepsilon",
        expl: "\\varepsilon",
        type: "s",
    },
    {
        text: "\\( \\zeta \\)",
        data: "\\zeta",
        expl: "\\zeta",
        type: "s",
    },
    {
        text: "\\( \\eta \\)",
        data: "\\eta",
        expl: "\\eta",
        type: "s",
    },
    {
        text: "\\( \\theta \\)",
        data: "\\theta",
        expl: "\\theta",
        type: "s",
    },
    {
        text: "\\( \\vartheta \\)",
        data: "\\vartheta",
        expl: "\\vartheta",
        type: "s",
    },
    {
        text: "\\( \\iota \\)",
        data: "\\iota",
        expl: "\\iota",
        type: "s",
    },
    {
        text: "\\( \\kappa \\)",
        data: "\\kappa",
        expl: "\\kappa",
        type: "s",
    },
    {
        text: "\\( \\Lambda \\)",
        data: "\\Lambda",
        expl: "\\Lambda",
        type: "s",
    },
    {
        text: "\\( \\lambda \\)",
        data: "\\lambda",
        expl: "\\lambda",
        type: "s",
    },
    {
        text: "\\( \\mu \\)",
        data: "\\mu",
        expl: "\\mu",
        type: "s",
    },
    {
        text: "\\( \\nu \\)",
        data: "\\nu",
        expl: "\\nu",
        type: "s",
    },
    {
        text: "\\( \\Xi \\)",
        data: "\\Xi",
        expl: "\\Xi",
        type: "s",
    },
    {
        text: "\\( \\xi \\)",
        data: "\\xi",
        expl: "\\xi",
        type: "s",
    },
    {
        text: "\\( \\Pi \\)",
        data: "\\Pi",
        expl: "\\Pi",
        type: "s",
    },
    {
        text: "\\( \\rho \\)",
        data: "\\rho",
        expl: "\\rho",
        type: "s",
    },
    {
        text: "\\( \\Sigma \\)",
        data: "\\Sigma",
        expl: "\\Sigma",
        type: "s",
    },
    {
        text: "\\( \\sigma \\)",
        data: "\\sigma",
        expl: "\\sigma",
        type: "s",
    },
    {
        text: "\\( \\tau \\)",
        data: "\\tau",
        expl: "\\tau",
        type: "s",
    },
    {
        text: "\\( \\Upsilon \\)",
        data: "\\Upsilon",
        expl: "\\Upsilon",
        type: "s",
    },
    {
        text: "\\( \\upsilon \\)",
        data: "\\upsilon",
        expl: "\\upsilon",
        type: "s",
    },
    {
        text: "\\( \\Phi \\)",
        data: "\\Phi",
        expl: "\\Phi",
        type: "s",
    },
    {
        text: "\\( \\phi \\)",
        data: "\\phi",
        expl: "\\phi",
        type: "s",
    },
    {
        text: "\\( \\chi \\)",
        data: "\\chi",
        expl: "\\chi",
        type: "s",
    },
    {
        text: "\\( \\Psi \\)",
        data: "\\Psi",
        expl: "\\Psi",
        type: "s",
    },
    {
        text: "\\( \\psi \\)",
        data: "\\psi",
        expl: "\\psi",
        type: "s",
    },
    {
        text: "\\( \\Omega \\)",
        data: "\\Omega",
        expl: "\\Omega",
        type: "s",
    },
    {
        text: "\\( \\omega \\)",
        data: "\\omega",
        expl: "\\omega",
        type: "s",
    },
    {
        text: "\\( \\partial \\)",
        data: "\\partial",
        expl: "\\partial",
        type: "s",
    },
    {
        text: "\\( \\varphi \\)",
        data: "\\varphi",
        expl: "\\varphi",
        type: "s",
    },
    {
        text: "\\( \\ge \\)",
        data: "\\ge",
        expl: "\\ge",
        type: "s",
    },
    {
        text: "\\( < \\)",
        data: "<",
        expl: "<",
        type: "s",
    },
    {
        text: "\\( > \\)",
        data: ">",
        expl: ">",
        type: "s",
    },
    {
        text: "\\( \\sim \\)",
        data: "\\sim",
        expl: "\\sim",
        type: "s",
    },
    {
        text: "\\( \\equiv \\)",
        data: "\\equiv",
        expl: "\\equiv",
        type: "s",
    },
    {
        text: "\\( \\not\\equiv \\)",
        data: "\\not\\equiv",
        expl: "\\not\\equiv",
        type: "s",
    },
    {
        text: "\\( \\circ \\)",
        data: "\\circ",
        expl: "\\circ",
        type: "s",
    },
    {
        text: "\\( \\ldots \\)",
        data: "\\ldots",
        expl: "\\ldots",
        type: "s",
    },
    {
        text: "\\( \\propto \\)",
        data: "\\propto",
        expl: "\\propto",
        type: "s",
    },
    {
        text: "\\( \\xrightleftharpoons[\\square]{\\square} \\)",
        data: "\\xrightleftharpoons[⁞]{}",
        expl: "\\xrightleftharpoons[ ]{}",
        type: "s",
    },
    {
        text: "⇅",
        data: "⇅",
        expl: "⇅",
        type: "s",
    },
    {
        text: "\\( \\angle \\)",
        data: "\\angle",
        expl: "\\angle",
        type: "s",
    },
    {
        text: "\\( \\uparrow \\)",
        data: "\\uparrow",
        expl: "\\uparrow",
        type: "s",
    },
    {
        text: "\\( \\nearrow \\)",
        data: "\\nearrow",
        expl: "\\nearrow",
        type: "s",
    },
    {
        text: "\\( \\searrow \\)",
        data: "\\searrow",
        expl: "\\searrow",
        type: "s",
    },
    {
        text: "\\( \\downarrow \\)",
        data: "\\downarrow",
        expl: "\\downarrow",
        type: "s",
    },
    {
        text: "\\( \\leftrightarrow \\)",
        data: "\\leftrightarrow",
        expl: "\\leftrightarrow",
        type: "s",
    },
    {
        text: "\\( \\perp \\)",
        data: "\\perp",
        expl: "\\perp",
        type: "s",
    },
    {
        text: "\\( \\exists \\)",
        data: "\\exists",
        expl: "\\exists",
        type: "s",
    },
    {
        text: "\\( \\forall \\)",
        data: "\\forall",
        expl: "\\forall",
        type: "s",
    },
    {
        text: "\\( \\mathbb{N} \\)",
        data: "\\mathbb{N}",
        expl: "\\mathbb{N}",
        type: "s",
    },
    {
        text: "\\( \\mathbb{Q} \\)",
        data: "\\mathbb{Q}",
        expl: "\\mathbb{Q}",
        type: "s",
    },
    {
        text: "\\( \\cap \\)",
        data: "\\cap",
        expl: "\\cap",
        type: "s",
    },
    {
        text: "\\( \\cup \\)",
        data: "\\cup",
        expl: "\\cup",
        type: "s",
    },
    {
        text: "\\( \\setminus \\)",
        data: "\\setminus",
        expl: "\\setminus",
        type: "s",
    },
    {
        text: "\\( \\subset \\)",
        data: "\\subset",
        expl: "\\subset",
        type: "s",
    },
    {
        text: "\\( \\not\\subset \\)",
        data: "\\not\\subset",
        expl: "\\not\\subset",
        type: "s",
    },
    {
        text: "\\( \\notin \\)",
        data: "\\notin",
        expl: "\\notin",
        type: "s",
    },
    {
        text: "\\( \\varnothing \\)",
        data: "\\varnothing",
        expl: "\\varnothing",
        type: "s",
    },
    {
        text: "\\( \\wedge \\)",
        data: "\\wedge",
        expl: "\\wedge",
        type: "s",
    },
    {
        text: "\\( \\vee \\)",
        data: "\\vee",
        expl: "\\vee",
        type: "s",
    },
    {
        text: "\\( \\neg \\)",
        data: "\\neg",
        expl: "\\neg",
        type: "s",
    },
    {
        text: "\\( \\nabla \\)",
        data: "\\nabla",
        expl: "\\nabla",
        type: "s",
    },
    {
        text: "\\(\\sqrt{\\square}\\)",
        data: "\\sqrt{⁞}",
        expl: "\\sqrt{ }",
        type: "s",
    },
    {
        text: "\\( x^{\\square} \\)",
        data: "x^⁞",
        expl: "x^ ",
        type: "s",
    },
    {
        text: "\\[ \\frac{\\square}{\\square} \\]",
        data: "\\frac{⁞}{}",
        expl: "\\frac{ }{}",
        type: "s",
    },
    {
        text: "\\[\\int_\\square^\\square\\]",
        data: "\\int_{⁞}^{}",
        expl: "\\int_{ }^{}",
        type: "s",
    },
    {
        text: "\\[ \\lim_{\\square} \\]",
        data: "\\lim_{⁞}",
        expl: "\\lim_{ }",
        type: "s",
    },
    {
        text: "\\[ \\overrightarrow{\\square} \\]",
        data: "\\overrightarrow{⁞}",
        expl: "\\overrightarrow{ }",
        type: "s",
    },
    {
        text: "\\[ \\overleftarrow{\\square} \\]",
        data: "\\overleftarrow{⁞}",
        expl: "\\overleftarrow{ }",
        type: "s",
    },
    {
        text: "\\( \\sin \\)",
        data: "\\sin",
        expl: "\\sin",
        type: "s",
    },
    {
        text: "\\( \\cos \\)",
        data: "\\cos",
        expl: "\\cos",
        type: "s",
    },
    {
        text: "\\( \\tan \\)",
        data: "\\tan",
        expl: "\\tan",
        type: "s",
    },
    {
        text: "\\( \\left|\\square\\right| \\)",
        data: "\\left|⁞\\right|",
        expl: "\\left| \\right|",
        type: "s",
    },
    {
        text: "\\( \\left[\\square\\right] \\)",
        data: "\\left[⁞\\right]",
        expl: "\\left[ \\right]",
        type: "s",
    },
    {
        text: "\\( \\left]\\square\\right] \\)",
        data: "]⁞]",
        expl: "] ]",
        type: "s",
    },
    {
        text: "\\[\\begin{cases}\n\\square&\\square\\\\\n\\square&\\square\n\\end{cases}\\]",
        data: "\\begin{cases}\n⁞&\\\\\n&\n\\end{cases}",
        expl: "\\begin{cases}\n &\\\\\n&\n\\end{cases}",
        type: "s",
    },
    {
        text: "\\[\\begin{matrix}\n\\square&\\square\\\\\n\\square&\\square\n\\end{matrix}\\]",
        data: "\\begin{matrix}\n⁞&\\\\\n&\n\\end{matrix}",
        expl: "\\begin{matrix}\n &\\\\\n&\n\\end{matrix}",
        type: "s",
    },
    {
        text: "\\[ \\frac{\\square}{\\square}^{\\text{(}\\square} \\]",
        data: "\\frac{a}{b}^{x}",
        expl: "\\frac{a}{b}^{x}",
        type: "s",
    },
    {
        text: "\\( \\binom{\\square}{\\square} \\)",
        data: "\\binom{⁞}{}",
        expl: "\\binom{ }{}",
        type: "s",
    },
    {
        text: "\\( \\sqrt[\\square]{\\square} \\)",
        data: "\\sqrt[⁞]{}",
        expl: "\\sqrt[ ]{}",
        type: "s",
    },
    {
        text: "\\( x_{\\square}{} \\)",
        data: "x_{⁞}",
        expl: "x_{ }",
        type: "s",
    },
    {
        text: "\\[ \\sum_{\\square}^{\\square} \\]",
        data: "\\sum_{⁞}^{}",
        expl: "\\sum_{ }^{}",
        type: "s",
    },
    {
        text: "\\[\\bigg/_{\\!\\!\\!\\!\\!{ \\square }}^{ \\square }\\]",
        data: "\\bigg/_{\\!\\!\\!\\!\\!{⁞}}^{}",
        expl: "\\bigg/_{\\!\\!\\!\\!\\!{ }}^{}",
        type: "s",
    },
    {
        text: "\\[ \\lim_{x\\rightarrow\\infty} \\]",
        data: "\\lim_{x\\rightarrow\\infty}",
        expl: "\\lim_{x\\rightarrow\\infty}",
        type: "s",
    },
    {
        text: "\\[ \\underrightarrow{\\square} \\]",
        data: "\\underrightarrow{⁞}",
        expl: "\\underrightarrow{ }",
        type: "s",
    },
    {
        text: "\\[ \\overline{\\square} \\]",
        data: "\\overline{⁞}",
        expl: "\\overline{ }",
        type: "s",
    },
    {
        text: "\\( \\overline{\\text{i}} \\)",
        data: "\\overline{\\text{i}}",
        expl: "\\overline{\\text{i}}",
        type: "s",
    },
    {
        text: "\\( \\overline{\\text{j}} \\)",
        data: "\\overline{\\text{j}}",
        expl: "\\overline{\\text{j}}",
        type: "s",
    },
    {
        text: "\\( \\overline{\\text{k}} \\)",
        data: "\\overline{\\text{k}}",
        expl: "\\overline{\\text{k}}",
        type: "s",
    },
    {
        text: "\\( \\left(\\square\\right) \\)",
        data: "\\left(⁞\\right)",
        expl: "\\left( \\right)",
        type: "s",
    },
    {
        text: "\\( ]x[ \\)",
        data: "]x[",
        expl: "]x[",
        type: "s",
    },
    {
        text: "\\( [x[ \\)",
        data: "[x[",
        expl: "[x[",
        type: "s",
    },
    {
        text: "\\( \\square_{\\square}^{\\square} \\)",
        data: "_{⁞}^{}",
        expl: "_{ }^{}",
        type: "s",
    },
    {
        text: "\\[ \\begin{array}{l|l}\n\\square&\\square\\\\\n\\hline\\square&\\square\n\\end{array} \\]",
        data: "\\begin{array}{l|l}\n⁞&\\\\\n\\hline&\n\\end{array}",
        expl: "\\begin{array}{l|l}\n &\\\\\n\\hline&\n\\end{array}",
        type: "s",
    },
    {
        text: "\\( ^{x\\text{)}}\\frac{a}{b} \\)",
        data: "^{x\\text{)}}\\frac{a}{b}",
        expl: "^{x\\text{)}}\\frac{a}{b}",
        type: "s",
    },
    {
        text: "\\( T \\)",
        data: "\\mathrm{⁞}",
        expl: "\\mathrm{ }",
        type: "s",
    },
    {
        text: "\\[x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}\\]",
        data: "x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}",
        expl: "x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}",
        type: "s",
    },
    {
        text: "\\[f_X\\left(x\\right)=\\frac{1}{\\sigma\\sqrt{2\\pi}}\\text{e}^{-\\frac{\\left(x-\\mu\\right)^2}{2\\sigma^2}}\\]",
        data: "f_X\\left(x\\right)=\\frac{1}{\\sigma\\sqrt{2\\pi}}\\text{e}^{-\\frac{\\left(x-\\mu\\right)^2}{2\\sigma^2}}",
        expl: "f_X\\left(x\\right)=\\frac{1}{\\sigma\\sqrt{2\\pi}}\\text{e}^{-\\frac{\\left(x-\\mu\\right)^2}{2\\sigma^2}}",
        type: "s",
    },
];
